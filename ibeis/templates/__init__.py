from __future__ import absolute_import, division, print_function
from ibeis.templates import template_definitions
from ibeis.templates import template_generator
import utool
print, print_, printDBG, rrr, profile = utool.inject(
    __name__, '[ibeis.templates]')


def reassign_submodule_attributes(verbose=True):
    """
    why reloading all the modules doesnt do this I don't know
    """
    import sys
    if verbose and '--quiet' not in sys.argv:
        print('dev reimport')
    # Self import
    import ibeis.templates
    # Implicit reassignment.
    seen_ = set([])
    for tup in IMPORT_TUPLES:
        if len(tup) > 2 and tup[2]:
            continue  # dont import package names
        submodname, fromimports = tup[0:2]
        submod = getattr(ibeis.templates, submodname)
        for attr in dir(submod):
            if attr.startswith('_'):
                continue
            if attr in seen_:
                # This just holds off bad behavior
                # but it does mimic normal util_import behavior
                # which is good
                continue
            seen_.add(attr)
            setattr(ibeis.templates, attr, getattr(submod, attr))


def reload_subs(verbose=True):
    """ Reloads ibeis.templates and submodules """
    rrr(verbose=verbose)
    def fbrrr(*args, **kwargs):
        """ fallback reload """
        pass
    getattr(template_definitions, 'rrr', fbrrr)(verbose=verbose)
    getattr(template_generator, 'rrr', fbrrr)(verbose=verbose)
    rrr(verbose=verbose)
    try:
        # hackish way of propogating up the new reloaded submodule attributes
        reassign_submodule_attributes(verbose=verbose)
    except Exception as ex:
        print(ex)
rrrr = reload_subs

IMPORT_TUPLES = [
    ('template_definitions', None),
    ('template_generator', None),
]
"""
Regen Command:
    cd C:/Users/joncrall/code/ibeis/ibeis/templates
    makeinit.py
"""
# autogenerated __init__.py for: 'C:/Users/joncrall/code/ibeis/ibeis/templates'

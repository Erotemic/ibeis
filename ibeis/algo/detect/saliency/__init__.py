# -*- coding: utf-8 -*-
# Autogenerated on 15:41:11 2016/04/18
# flake8: noqa
from __future__ import absolute_import, division, print_function, unicode_literals
from ibeis.algo.detect.saliency import assignment
from ibeis.algo.detect.saliency import config
from ibeis.algo.detect.saliency import extract
from ibeis.algo.detect.saliency import model.backup
from ibeis.algo.detect.saliency import model
from ibeis.algo.detect.saliency import saliency
from ibeis.algo.detect.saliency import transform
from ibeis.algo.detect.saliency import utils
import utool
print, rrr, profile = utool.inject2(__name__, '[ibeis.algo.detect.saliency]')


def reassign_submodule_attributes(verbose=True):
    """
    why reloading all the modules doesnt do this I don't know
    """
    import sys
    if verbose and '--quiet' not in sys.argv:
        print('dev reimport')
    # Self import
    import ibeis.algo.detect.saliency
    # Implicit reassignment.
    seen_ = set([])
    for tup in IMPORT_TUPLES:
        if len(tup) > 2 and tup[2]:
            continue  # dont import package names
        submodname, fromimports = tup[0:2]
        submod = getattr(ibeis.algo.detect.saliency, submodname)
        for attr in dir(submod):
            if attr.startswith('_'):
                continue
            if attr in seen_:
                # This just holds off bad behavior
                # but it does mimic normal util_import behavior
                # which is good
                continue
            seen_.add(attr)
            setattr(ibeis.algo.detect.saliency, attr, getattr(submod, attr))


def reload_subs(verbose=True):
    """ Reloads ibeis.algo.detect.saliency and submodules """
    if verbose:
        print('Reloading submodules')
    rrr(verbose=verbose)
    def wrap_fbrrr(mod):
        def fbrrr(*args, **kwargs):
            """ fallback reload """
            if verbose:
                print('No fallback relaod for mod=%r' % (mod,))
            # Breaks ut.Pref (which should be depricated anyway)
            # import imp
            # imp.reload(mod)
        return fbrrr
    def get_rrr(mod):
        if hasattr(mod, 'rrr'):
            return mod.rrr
        else:
            return wrap_fbrrr(mod)
    def get_reload_subs(mod):
        return getattr(mod, 'reload_subs', wrap_fbrrr(mod))
    get_rrr(assignment)(verbose=verbose)
    get_rrr(config)(verbose=verbose)
    get_rrr(extract)(verbose=verbose)
    get_rrr(model.backup)(verbose=verbose)
    get_rrr(model)(verbose=verbose)
    get_rrr(saliency)(verbose=verbose)
    get_rrr(transform)(verbose=verbose)
    get_rrr(utils)(verbose=verbose)
    rrr(verbose=verbose)
    try:
        # hackish way of propogating up the new reloaded submodule attributes
        reassign_submodule_attributes(verbose=verbose)
    except Exception as ex:
        print(ex)
rrrr = reload_subs

IMPORT_TUPLES = [
    ('assignment', None),
    ('config', None),
    ('extract', None),
    ('model.backup', None),
    ('model', None),
    ('saliency', None),
    ('transform', None),
    ('utils', None),
]
"""
Regen Command:
    cd /Users/bluemellophone/code/ibeis/ibeis/algo/detect/saliency
    makeinit.py --modname=ibeis.algo.detect.saliency
"""